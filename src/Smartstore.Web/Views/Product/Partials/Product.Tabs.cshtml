@using Smartstore.Web.Models.Catalog
@using Smartstore.Web.Models.Common;

@model ProductDetailsModel

@{
    var hasSpecificationAttributes = Model.SpecificationAttributes.Count > 0;
}

<tabstrip id="pd-tabs" class="pd-tabs" sm-nav-style="Material" sm-hide-single-item="true" sm-responsive="true" sm-breakpoint="&lt;md">
    <tab-content-header>
        <a href="javascript:void()" class="btn btn-secondary btn-flat btn-no-border offcanvas-closer rounded-0" title="@T("Common.Close")">
            <i class="fa fa-chevron-left"></i>
            <span>@T("Common.Close")</span>
        </a>
    </tab-content-header>
    @if (Model.FullDescription.Value.HasValue())
    {
        var summary = Model.FullDescription.Value.RemoveHtml().Truncate(300, "...");
        <tab sm-title="@T("Products.Details")" sm-name="pd-full-desc" sm-summary="@summary" sm-selected="true">
            <div sm-language-attributes-for="Model.FullDescription" itemprop="description" class="long-text html-editor-content">
                <collapsed-content>
                    @Html.Raw(Model.FullDescription)
                </collapsed-content>
            </div>
        </tab>
    }

    @if (hasSpecificationAttributes)
    {
        <tab sm-title="@T("Products.Specs")" sm-name="pd-spec-attrs" sm-selected="!Model.FullDescription.HasValue()">
            <partial name="Product.Specs" model="Model.SpecificationAttributes" />
        </tab>
    }

    @if (Model.DisplayProductReviews)
    {
        <tab sm-title="@T("Reviews")" 
             sm-name="pd-reviews"
             sm-selected="!Model.FullDescription.HasValue() && !hasSpecificationAttributes" 
             sm-badge-text="@Model.ReviewCount.ToString()" 
             sm-badge-style="@Model.ReviewCount > 0 ? BadgeStyle.Warning : BadgeStyle.Secondary">
            <p class="mb-4">
                <a asp-action="Reviews" asp-controller="Product" asp-route-id="@Model.Id" class="btn btn-warning">
                    <span>@T($"Reviews.Overview.{(Model.ProductReviews.TotalReviewsCount > 0 ? "AddNew" : "First")}")</span>
                </a>
            </p>
            <partial name="Product.Reviews" model="Model.ProductReviews" />
        </tab>
    }

 
    @{
        // CR sparepart light
        //var sparepartStoreLinkZoneHasValues = Display.ZoneHasContent("sparepart_store_link");

        //var sparepartsLight = Html.Raw(Html.Widget("sparepart_store_link")).ToHtmlString();

        //var sparepartsLightHtml = Html.Raw(Html.RenderWidget("sparepart_store_link")).ToHtmlString();
        //var summaryHtml = Html.RenderWidget("offcanvas_cart_summary").ToHtmlString();

        //if (sparepartsLight.Value != String.Empty && sparepartsLight.Value.Length > 10) //sparepartsLight != "\n\n\n\r\n\r\n\r\n\r\n")
        //if (sparepartStoreLinkZoneHasValues)

        //new HtmlWidgetInvoker("");
        //await Html.RenderComponentAsync()

        // ev im widget das tab rendern
        // oder ein anderes widget rendert eine bool variable-->enable
        // call action in plugin "~has spare parts(productid)

        //System.Text.StringBuilder sb = new System.Text.StringBuilder();
        //System.IO.StringWriter writer = new System.IO.StringWriter(sb);
        //System.Text.Encoding asciiEncoding = System.Text.Encoding.ASCII;
        //System.Text.Encodings.Web.HtmlEncoder hEncoder = System.Text.Encodings.Web.HtmlEncoder.Default;
        ////var test = Component.InvokeAsync("sparepart_store_link").Result.ToHtmlString();  //.WriteTo(writer, hEncoder));
        //var test = Component.InvokeAsync("Administrator.at.ProductLinkerLight.Components.ProductLinkerLightViewComponent").Result.ToHtmlString();  //.WriteTo(writer, hEncoder));


        // vorerst immer zeigen mit Anzeige 'keine Ersatzteile verfügbar'
        // check plugin installed?
        if (true)
        {
            <tab sm-title="@T("Plugins.Administrator.at.ProductLinkerLight.SparePartsLightListTitle")"
                sm-name="pd-sparepart_link"
                sm-if="false"
                sm-selected="false">
                <zone name="sparepart_store_link" />
            </tab>
        }
     }
        </tabstrip>
